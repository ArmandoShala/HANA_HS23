Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py", line 612, in run_until_complete
    return future.result()
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/nbclient/client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
def xn(t,n,alpha):
    y = np.zeros_like(t)
    y[t<=1/n] = n**alpha
    y[t>1/n] = 1/(t**alpha)
    return y
x = lambda t, alpha: 1/t**alpha

plt.plot(t,xn(t,1,1/3), label='$xn=1$')
plt.plot(t,x(t,1/3),'--', label='Grenzfunktion')
plt.legend()
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m<ipython-input-7-5ffdd8ce139a>[0m in [0;36m<module>[0;34m[0m
[1;32m      6[0m [0mx[0m [0;34m=[0m [0;32mlambda[0m [0mt[0m[0;34m,[0m [0malpha[0m[0;34m:[0m [0;36m1[0m[0;34m/[0m[0mt[0m[0;34m**[0m[0malpha[0m[0;34m[0m[0;34m[0m[0m
[1;32m      7[0m [0;34m[0m[0m
[0;32m----> 8[0;31m [0mplt[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mt[0m[0;34m,[0m[0mxn[0m[0;34m([0m[0mt[0m[0;34m,[0m[0;36m1[0m[0;34m,[0m[0;36m1[0m[0;34m/[0m[0;36m3[0m[0;34m)[0m[0;34m,[0m [0mlabel[0m[0;34m=[0m[0;34m'$xn=1$'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      9[0m [0mplt[0m[0;34m.[0m[0mplot[0m[0;34m([0m[0mt[0m[0;34m,[0m[0mx[0m[0;34m([0m[0mt[0m[0;34m,[0m[0;36m1[0m[0;34m/[0m[0;36m3[0m[0;34m)[0m[0;34m,[0m[0;34m'--'[0m[0;34m,[0m [0mlabel[0m[0;34m=[0m[0;34m'Grenzfunktion'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     10[0m [0mplt[0m[0;34m.[0m[0mlegend[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m<ipython-input-7-5ffdd8ce139a>[0m in [0;36mxn[0;34m(t, n, alpha)[0m
[1;32m      2[0m     [0my[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mzeros_like[0m[0;34m([0m[0mt[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m     [0my[0m[0;34m[[0m[0mt[0m[0;34m<=[0m[0;36m1[0m[0;34m/[0m[0mn[0m[0;34m][0m [0;34m=[0m [0mn[0m[0;34m**[0m[0malpha[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 4[0;31m     [0my[0m[0;34m[[0m[0mt[0m[0;34m>[0m[0;36m1[0m[0;34m/[0m[0mn[0m[0;34m][0m [0;34m=[0m [0;36m1[0m[0;34m/[0m[0;34m([0m[0mt[0m[0;34m**[0m[0malpha[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      5[0m     [0;32mreturn[0m [0my[0m[0;34m[0m[0;34m[0m[0m
[1;32m      6[0m [0mx[0m [0;34m=[0m [0;32mlambda[0m [0mt[0m[0;34m,[0m [0malpha[0m[0;34m:[0m [0;36m1[0m[0;34m/[0m[0mt[0m[0;34m**[0m[0malpha[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: NumPy boolean array indexing assignment cannot assign 400 input values to the 133 output values where the mask is true
ValueError: NumPy boolean array indexing assignment cannot assign 400 input values to the 133 output values where the mask is true

